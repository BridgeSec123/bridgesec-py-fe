import * as React from 'react';
import type { DiffResult } from './differ';
import type { InlineDiffOptions } from './utils/get-inline-diff';
interface ExpandLineRendererOptions {
    /**
     * If this is `true`, you can show a "⬆️ Show xx lines" button
     */
    hasLinesBefore: boolean;
    /**
     * If this is `true`, you can show a "⬇️ Show xx lines" button
     */
    hasLinesAfter: boolean;
    /**
     * Call this function to expand `lines` lines before,
     * if there are not enough lines before, it will expand all lines before.
     */
    onExpandBefore: (lines: number) => void;
    /**
     * Call this function to expand `lines` lines after,
     * if there are not enough lines after, it will expand all lines after.
     */
    onExpandAfter: (lines: number) => void;
    /**
     * Call this function to expand all lines in this continuous part.
     */
    onExpandAll: () => void;
}
export declare type HideUnchangedLinesOptions = boolean | {
    /**
     * If there are continuous unchanged lines exceeding the limit, they should be hidden,
     * default is `8`.
     */
    threshold?: number;
    /**
     * We can keep displaying some lines around the "expand" line for a better context,
     * default is `3`.
     */
    margin?: number;
    /**
     * Controls how many lines will be displayed when clicking the "Show xx lines before"
     * or "Show xx lines after" button in the "expand" line, default is `20`.
     */
    expandMoreLinesLimit?: number;
    /**
     * The custom renderer of the "expand" line,
     * default renderer will produce the following buttons in this line:
     *
     * ```text
     * [⬆️ Show 20 lines] [↕️ Show all unchanged lines] [⬇️ Show 20 lines]
     * ```
     */
    expandLineRenderer?: (options?: ExpandLineRendererOptions) => JSX.Element;
};
export interface ViewerProps {
    /** The diff result `[before, after]`. */
    diff: readonly [DiffResult[], DiffResult[]];
    /** Configure indent, default `2` means 2 spaces. */
    indent?: number | 'tab';
    /** Background colour for 3 types of lines. */
    bgColour?: {
        add?: string;
        remove?: string;
        modify?: string;
    };
    /** Display line numbers, default is `false`. */
    lineNumbers?: boolean;
    /** Whether to show the inline diff highlight, default is `false`. */
    highlightInlineDiff?: boolean;
    /** Controls the inline diff behaviour, the `highlightInlineDiff` must be enabled. */
    inlineDiffOptions?: InlineDiffOptions;
    /**
     * Hide continuous unchanged lines and display an "expand" instead,
     * default `false` means it won't hide unchanged lines.
     */
    hideUnchangedLines?: HideUnchangedLinesOptions;
    /**
     * Use virtual list to speed up rendering, default is `false`.
     */
    virtual?: boolean | {
        /** @default 'body' */
        scrollContainer?: string;
        /** @default 18 */
        itemHeight?: number;
        /** @default 26 */
        expandLineHeight?: number;
    };
    /**
     * Enable the syntax highlight feature, default is `false`.
     */
    syntaxHighlight?: false | {
        /**
         * The syntax highlighting theme; it will add a className to `table`.
         *
         * NOTICE:
         * - You need to import the corresponding CSS file manually.
         * @default 'monokai'
         */
        theme?: string;
    };
    /**
     * Configure the texts in the viewer, you can use it to implement i18n.
     */
    texts?: {
        /** @default 'No change detected' */
        noChangeDetected?: string;
    };
    /** Extra class names */
    className?: string;
    /** Extra styles */
    style?: React.CSSProperties;
}
declare const Viewer: React.FC<ViewerProps>;
export default Viewer;
