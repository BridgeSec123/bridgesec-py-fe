{
  "version": 3,
  "sources": ["../../@okta/src/OktaContext.ts", "../../@okta/src/OktaError.tsx", "../../@okta/src/Security.tsx", "../../@okta/src/withOktaAuth.tsx", "../../@okta/src/LoginCallback.tsx", "../../@okta/src/SecureRoute.tsx", "../../compare-versions/index.mjs"],
  "sourcesContent": ["/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport * as React from 'react';\nimport { AuthState, OktaAuth } from '@okta/okta-auth-js';\n\nexport type OnAuthRequiredFunction = (oktaAuth: OktaAuth) => Promise<void> | void;\nexport type OnAuthResumeFunction = () => void;\n\nexport type RestoreOriginalUriFunction = (oktaAuth: OktaAuth, originalUri: string) => Promise<void> | void;\n\nexport interface IOktaContext {\n    oktaAuth: OktaAuth;\n    authState: AuthState | null;\n    _onAuthRequired?: OnAuthRequiredFunction;\n}\n\nconst OktaContext = React.createContext<IOktaContext | null>(null);\n\nexport const useOktaAuth = (): IOktaContext => React.useContext(OktaContext) as IOktaContext;\n\nexport default OktaContext;\n", "/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\n\nconst OktaError: React.FC<{ error: Error }> = ({ error }) => { \n  if(error.name && error.message) { \n    return <p>{error.name}: {error.message}</p>;\n  }\n  return <p>Error: {error.toString()}</p>;\n};\n\nexport default OktaError;\n", "/*!\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { AuthSdkError, AuthState, OktaAuth } from '@okta/okta-auth-js';\nimport OktaContext, { OnAuthRequiredFunction, RestoreOriginalUriFunction } from './OktaContext';\nimport OktaError from './OktaError';\nimport { compare as compareVersions } from 'compare-versions';\n\ndeclare const AUTH_JS: {\n  minSupportedVersion: string;\n}\n\ndeclare const PACKAGE_NAME: string;\ndeclare const PACKAGE_VERSION: string;\ndeclare const SKIP_VERSION_CHECK: string;\n\nconst Security: React.FC<{\n  oktaAuth: OktaAuth,\n  restoreOriginalUri: RestoreOriginalUriFunction, \n  onAuthRequired?: OnAuthRequiredFunction,\n  children?: React.ReactNode\n} & React.HTMLAttributes<HTMLDivElement>> = ({ \n  oktaAuth,\n  restoreOriginalUri, \n  onAuthRequired, \n  children\n}) => { \n  const [authState, setAuthState] = React.useState(() => {\n    if (!oktaAuth) {\n      return null;\n    }\n    return oktaAuth.authStateManager.getAuthState();\n  });\n\n  React.useEffect(() => {\n    if (!oktaAuth || !restoreOriginalUri) {\n      return;\n    }\n\n    // Add default restoreOriginalUri callback\n    // props.restoreOriginalUri is required, therefore if options.restoreOriginalUri exists, there are 2 callbacks\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (oktaAuth.options.restoreOriginalUri) {\n      console.warn('Two custom restoreOriginalUri callbacks are detected. The one from the OktaAuth configuration will be overridden by the provided restoreOriginalUri prop from the Security component.');\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    oktaAuth.options.restoreOriginalUri = (async (oktaAuth: unknown, originalUri: string) => {\n      return restoreOriginalUri(oktaAuth as OktaAuth, originalUri);\n    }) as ((oktaAuth: OktaAuth, originalUri?: string) => Promise<void>);\n\n  }, []); // empty array, only check on component mount\n\n  React.useEffect(() => {\n    if (!oktaAuth) {\n      return;\n    }\n\n    // Add okta-react userAgent\n    if (oktaAuth._oktaUserAgent) {\n      oktaAuth._oktaUserAgent.addEnvironment(`${PACKAGE_NAME}/${PACKAGE_VERSION}`);\n    } else {\n      console.warn('_oktaUserAgent is not available on auth SDK instance. Please use okta-auth-js@^5.3.1 .');\n    }\n\n    // Update Security provider with latest authState\n    const currentAuthState = oktaAuth.authStateManager.getAuthState();\n    if (currentAuthState !== authState) {\n      setAuthState(currentAuthState);\n    }\n    const handler = (authState: AuthState) => {\n      setAuthState(authState);\n    };\n    oktaAuth.authStateManager.subscribe(handler);\n\n    // Trigger an initial change event to make sure authState is latest\n    oktaAuth.start();\n\n    return () => {\n      oktaAuth.authStateManager.unsubscribe(handler);\n    };\n  }, [oktaAuth]);\n\n  if (!oktaAuth) {\n    const err = new AuthSdkError('No oktaAuth instance passed to Security Component.');\n    return <OktaError error={err} />;\n  }\n\n  if (!restoreOriginalUri) {\n    const err = new AuthSdkError('No restoreOriginalUri callback passed to Security Component.');\n    return <OktaError error={err} />;\n  }\n\n  if (!oktaAuth._oktaUserAgent) {\n    console.warn('_oktaUserAgent is not available on auth SDK instance. Please use okta-auth-js@^5.3.1 .');\n  }\n  else {\n    // use SKIP_VERSION_CHECK flag to control version check in tests\n    // OKTA-465157: remove SKIP_VERSION_CHECK\n    const isAuthJsSupported = SKIP_VERSION_CHECK === '1' ||\n      compareVersions(oktaAuth._oktaUserAgent.getVersion(), AUTH_JS.minSupportedVersion, '>=');\n    if (!isAuthJsSupported) {\n      const err = new AuthSdkError(`\n        Passed in oktaAuth is not compatible with the SDK,\n        minimum supported okta-auth-js version is ${AUTH_JS.minSupportedVersion}.\n      `);\n      return <OktaError error={err} />;\n    }\n  }\n\n  return (\n    <OktaContext.Provider value={{ \n      oktaAuth, \n      authState, \n      _onAuthRequired: onAuthRequired\n    }}>\n      {children}\n    </OktaContext.Provider>\n  );\n};\n\nexport default Security;\n", "/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, IOktaContext } from './OktaContext';\n\nconst withOktaAuth = <P extends IOktaContext>(\n  ComponentToWrap: React.ComponentType<P>\n): React.FC<Omit<P, keyof IOktaContext>> => { \n  const WrappedComponent = (props: Omit<P, keyof IOktaContext>) => { \n    const oktaAuthProps = useOktaAuth();\n    return <ComponentToWrap {...oktaAuthProps as IOktaContext } {...props as P} />;\n  };\n  WrappedComponent.displayName = 'withOktaAuth_' + (ComponentToWrap.displayName || ComponentToWrap.name);\n  return WrappedComponent;\n};\n\nexport default withOktaAuth;\n", "/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, OnAuthResumeFunction } from './OktaContext';\nimport OktaError from './OktaError';\n\ninterface LoginCallbackProps {\n  errorComponent?: React.ComponentType<{ error: Error }>;\n  onAuthResume?: OnAuthResumeFunction;\n  loadingElement?: React.ReactElement;\n}\n\nlet handledRedirect = false;\n\nconst LoginCallback: React.FC<LoginCallbackProps> = ({ errorComponent, loadingElement = null, onAuthResume }) => { \n  const { oktaAuth, authState } = useOktaAuth();\n  const [callbackError, setCallbackError] = React.useState(null);\n\n  const ErrorReporter = errorComponent || OktaError;\n  React.useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore OKTA-464505: backward compatibility support for auth-js@5\n    const isInteractionRequired = oktaAuth.idx.isInteractionRequired || oktaAuth.isInteractionRequired.bind(oktaAuth);\n    if (onAuthResume && isInteractionRequired()) {\n      onAuthResume();\n      return;\n    }\n    // OKTA-635977: Prevents multiple calls of handleLoginRedirect() in React18 StrictMode\n    // Top-level variable solution follows: https://react.dev/learn/you-might-not-need-an-effect#initializing-the-application\n    if (!handledRedirect) {\n      oktaAuth.handleLoginRedirect().catch(e => {\n        setCallbackError(e);\n      })\n      handledRedirect = true;\n    }\n  }, [oktaAuth]);\n\n  const authError = authState?.error;\n  const displayError = callbackError || authError;\n  if (displayError) { \n    return <ErrorReporter error={displayError}/>;\n  }\n\n  return loadingElement;\n};\n\nexport default LoginCallback;\n", "/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, OnAuthRequiredFunction } from './OktaContext';\nimport * as ReactRouterDom from 'react-router-dom';\nimport { toRelativeUrl, AuthSdkError } from '@okta/okta-auth-js';\nimport OktaError from './OktaError';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nlet useMatch: any;\nif ('useRouteMatch' in ReactRouterDom) {\n  // trick static analyzer to avoid \"'useRouteMatch' is not exported\" error\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  useMatch = (ReactRouterDom as any)['useRouteMatch' in ReactRouterDom ? 'useRouteMatch' : ''];\n} else {\n  // throw when useMatch is triggered\n  useMatch = () => { \n    throw new AuthSdkError('Unsupported: SecureRoute only works with react-router-dom v5 or any router library with compatible APIs. See examples under the \"samples\" folder for how to implement your own custom SecureRoute Component.');\n  };\n}\n\nconst SecureRoute: React.FC<{\n  onAuthRequired?: OnAuthRequiredFunction;\n  errorComponent?: React.ComponentType<{ error: Error }>;\n} & ReactRouterDom.RouteProps & React.HTMLAttributes<HTMLDivElement>> = ({ \n  onAuthRequired,\n  errorComponent,\n  ...routeProps\n}) => { \n  const { oktaAuth, authState, _onAuthRequired } = useOktaAuth();\n  const match = useMatch(routeProps);\n  const pendingLogin = React.useRef(false);\n  const [handleLoginError, setHandleLoginError] = React.useState<Error | null>(null);\n  const ErrorReporter = errorComponent || OktaError;\n\n  React.useEffect(() => {\n    const handleLogin = async () => {\n      if (pendingLogin.current) {\n        return;\n      }\n\n      pendingLogin.current = true;\n\n      const originalUri = toRelativeUrl(window.location.href, window.location.origin);\n      oktaAuth.setOriginalUri(originalUri);\n      const onAuthRequiredFn = onAuthRequired || _onAuthRequired;\n      if (onAuthRequiredFn) {\n        await onAuthRequiredFn(oktaAuth);\n      } else {\n        await oktaAuth.signInWithRedirect();\n      }\n    };\n\n    // Only process logic if the route matches\n    if (!match) {\n      return;\n    }\n\n    if (!authState) {\n      return;\n    }\n\n    if (authState.isAuthenticated) {\n      pendingLogin.current = false;\n      return;\n    }\n\n    // Start login if app has decided it is not logged in and there is no pending signin\n    if(!authState.isAuthenticated) { \n      handleLogin().catch(err => {\n        setHandleLoginError(err as Error);\n      });\n    }  \n\n  }, [\n    authState,\n    oktaAuth, \n    match, \n    onAuthRequired, \n    _onAuthRequired\n  ]);\n\n  if (handleLoginError) {\n    return <ErrorReporter error={handleLoginError} />;\n  }\n\n  if (!authState || !authState.isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <ReactRouterDom.Route\n      { ...routeProps }\n    />\n  );\n};\n\nexport default SecureRoute;\n", "export default function compareVersions(v1, v2) {\n  // validate input and split into segments\n  const n1 = validateAndParse(v1);\n  const n2 = validateAndParse(v2);\n\n  // pop off the patch\n  const p1 = n1.pop();\n  const p2 = n2.pop();\n\n  // validate numbers\n  const r = compareSegments(n1, n2);\n  if (r !== 0) return r;\n\n  // validate pre-release\n  if (p1 && p2) {\n    return compareSegments(p1.split('.'), p2.split('.'));\n  } else if (p1 || p2) {\n    return p1 ? -1 : 1;\n  }\n\n  return 0;\n}\n\nexport const validate = (v) =>\n  typeof v === 'string' && /^[v\\d]/.test(v) && semver.test(v);\n\nexport const compare = (v1, v2, operator) => {\n  // validate input operator\n  assertValidOperator(operator);\n\n  // since result of compareVersions can only be -1 or 0 or 1\n  // a simple map can be used to replace switch\n  const res = compareVersions(v1, v2);\n\n  return operatorResMap[operator].includes(res);\n};\n\nexport const satisfies = (v, r) => {\n  // if no range operator then \"=\"\n  const m = r.match(/^([<>=~^]+)/);\n  const op = m ? m[1] : '=';\n\n  // if gt/lt/eq then operator compare\n  if (op !== '^' && op !== '~') return compare(v, r, op);\n\n  // else range of either \"~\" or \"^\" is assumed\n  const [v1, v2, v3] = validateAndParse(v);\n  const [r1, r2, r3] = validateAndParse(r);\n  if (compareStrings(v1, r1) !== 0) return false;\n  if (op === '^') {\n    return compareSegments([v2, v3], [r2, r3]) >= 0;\n  }\n  if (compareStrings(v2, r2) !== 0) return false;\n  return compareStrings(v3, r3) >= 0;\n};\n\n// export CJS style for parity\ncompareVersions.validate = validate;\ncompareVersions.compare = compare;\ncompareVersions.satisfies = satisfies;\n\nconst semver =\n  /^[v^~<>=]*?(\\d+)(?:\\.([x*]|\\d+)(?:\\.([x*]|\\d+)(?:\\.([x*]|\\d+))?(?:-([\\da-z\\-]+(?:\\.[\\da-z\\-]+)*))?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\n\nconst validateAndParse = (v) => {\n  if (typeof v !== 'string') {\n    throw new TypeError('Invalid argument expected string');\n  }\n  const match = v.match(semver);\n  if (!match) {\n    throw new Error(`Invalid argument not valid semver ('${v}' received)`);\n  }\n  match.shift();\n  return match;\n};\n\nconst isWildcard = (s) => s === '*' || s === 'x' || s === 'X';\n\nconst tryParse = (v) => {\n  const n = parseInt(v, 10);\n  return isNaN(n) ? v : n;\n};\n\nconst forceType = (a, b) =>\n  typeof a !== typeof b ? [String(a), String(b)] : [a, b];\n\nconst compareStrings = (a, b) => {\n  if (isWildcard(a) || isWildcard(b)) return 0;\n  const [ap, bp] = forceType(tryParse(a), tryParse(b));\n  if (ap > bp) return 1;\n  if (ap < bp) return -1;\n  return 0;\n};\n\nconst compareSegments = (a, b) => {\n  for (let i = 0; i < Math.max(a.length, b.length); i++) {\n    const r = compareStrings(a[i] || 0, b[i] || 0);\n    if (r !== 0) return r;\n  }\n  return 0;\n};\n\nconst operatorResMap = {\n  '>': [1],\n  '>=': [0, 1],\n  '=': [0],\n  '<=': [-1, 0],\n  '<': [-1],\n};\n\nconst allowedOperators = Object.keys(operatorResMap);\n\nconst assertValidOperator = (op) => {\n  if (typeof op !== 'string') {\n    throw new TypeError(\n      `Invalid operator type, expected string but got ${typeof op}`\n    );\n  }\n  if (allowedOperators.indexOf(op) === -1) {\n    throw new Error(\n      `Invalid operator, expected one of ${allowedOperators.join('|')}`\n    );\n  }\n};\n"],
  "mappings": "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",
  "names": ["createElement", "useOktaAuth", "restoreOriginalUri", "OktaError", "onAuthRequired", "useState", "Security", "authState", "setAuthState", "console", "oktaAuth", "options", "_regeneratorRuntime", "useEffect", "warn", "currentAuthState", "handler", "err", "AuthSdkError", "React", "error", "minSupportedVersion", "value", "_onAuthRequired", "children", "withOktaAuth", "WrappedComponent", "handledRedirect", "LoginCallback", "errorComponent", "loadingElement", "setCallbackError", "ErrorReporter", "onAuthResume", "isInteractionRequired", "handleLoginRedirect", "authError", "displayError", "useMatch", "handleLoginError", "pendingLogin", "current", "originalUri", "setOriginalUri", "onAuthRequiredFn", "isAuthenticated", "handleLogin", "ReactRouterDom", "routeProps"]
}
