import {
  require_prop_types
} from "./chunk-CARFU3R3.js";
import {
  require_classnames
} from "./chunk-MX4UL73J.js";
import "./chunk-DHORR3Q4.js";
import {
  require_react
} from "./chunk-OU5AQDZK.js";
import {
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/@visx/pattern/esm/patterns/Pattern.js
var import_prop_types = __toESM(require_prop_types());
var import_react = __toESM(require_react());
function Pattern(_ref) {
  var id = _ref.id, width = _ref.width, height = _ref.height, children = _ref.children;
  return import_react.default.createElement("defs", null, import_react.default.createElement("pattern", {
    id,
    width,
    height,
    patternUnits: "userSpaceOnUse"
  }, children));
}
Pattern.propTypes = {
  id: import_prop_types.default.string.isRequired,
  width: import_prop_types.default.number.isRequired,
  height: import_prop_types.default.number.isRequired,
  children: import_prop_types.default.node.isRequired
};

// node_modules/@visx/pattern/esm/patterns/Lines.js
var import_prop_types2 = __toESM(require_prop_types());
var import_react2 = __toESM(require_react());
var import_classnames = __toESM(require_classnames());

// node_modules/@visx/pattern/esm/constants/index.js
var PatternOrientation = {
  horizontal: "horizontal",
  vertical: "vertical",
  diagonal: "diagonal",
  diagonalRightToLeft: "diagonalRightToLeft"
};

// node_modules/@visx/pattern/esm/patterns/Lines.js
function pathForOrientation(_ref) {
  var height = _ref.height, orientation = _ref.orientation;
  switch (orientation) {
    case PatternOrientation.horizontal:
      return "M 0," + height / 2 + " l " + height + ",0";
    case PatternOrientation.diagonal:
      return "M 0," + height + " l " + height + "," + -height + " M " + -height / 4 + "," + height / 4 + " l " + height / 2 + "," + -height / 2 + "\n             M " + 3 / 4 * height + "," + 5 / 4 * height + " l " + height / 2 + "," + -height / 2;
    case PatternOrientation.diagonalRightToLeft:
      return "M 0,0 l " + height + "," + height + "\n        M " + -height / 4 + "," + 3 / 4 * height + " l " + height / 2 + "," + height / 2 + "\n        M " + 3 / 4 * height + "," + -height / 4 + " l " + height / 2 + "," + height / 2;
    case PatternOrientation.vertical:
    default:
      return "M " + height / 2 + ", 0 l 0, " + height;
  }
}
function Lines(_ref2) {
  var id = _ref2.id, width = _ref2.width, height = _ref2.height, stroke = _ref2.stroke, strokeWidth = _ref2.strokeWidth, strokeDasharray = _ref2.strokeDasharray, _ref2$strokeLinecap = _ref2.strokeLinecap, strokeLinecap = _ref2$strokeLinecap === void 0 ? "square" : _ref2$strokeLinecap, _ref2$shapeRendering = _ref2.shapeRendering, shapeRendering = _ref2$shapeRendering === void 0 ? "auto" : _ref2$shapeRendering, _ref2$orientation = _ref2.orientation, orientation = _ref2$orientation === void 0 ? ["vertical"] : _ref2$orientation, background = _ref2.background, className = _ref2.className;
  var orientations = Array.isArray(orientation) ? orientation : [orientation];
  return import_react2.default.createElement(Pattern, {
    id,
    width,
    height
  }, !!background && import_react2.default.createElement("rect", {
    className: (0, import_classnames.default)("visx-pattern-line-background"),
    width,
    height,
    fill: background
  }), orientations.map(function(o, i) {
    return import_react2.default.createElement("path", {
      key: "visx-" + id + "-line-" + o + "-" + i,
      className: (0, import_classnames.default)("visx-pattern-line", className),
      d: pathForOrientation({
        orientation: o,
        height
      }),
      stroke,
      strokeWidth,
      strokeDasharray,
      strokeLinecap,
      shapeRendering
    });
  }));
}
Lines.propTypes = {
  id: import_prop_types2.default.string.isRequired,
  width: import_prop_types2.default.number.isRequired,
  height: import_prop_types2.default.number.isRequired,
  className: import_prop_types2.default.string,
  background: import_prop_types2.default.string,
  stroke: import_prop_types2.default.string,
  strokeWidth: import_prop_types2.default.oneOfType([import_prop_types2.default.number, import_prop_types2.default.string]),
  strokeDasharray: import_prop_types2.default.oneOfType([import_prop_types2.default.string, import_prop_types2.default.number]),
  strokeLinecap: import_prop_types2.default.oneOf(["square", "butt", "round", "inherit"]),
  shapeRendering: import_prop_types2.default.oneOfType([import_prop_types2.default.string, import_prop_types2.default.number]),
  orientation: import_prop_types2.default.array
};

// node_modules/@visx/pattern/esm/patterns/Circles.js
var import_prop_types3 = __toESM(require_prop_types());
var import_react3 = __toESM(require_react());
var import_classnames2 = __toESM(require_classnames());
function Circles(_ref) {
  var _corners;
  var id = _ref.id, width = _ref.width, height = _ref.height, _ref$radius = _ref.radius, radius = _ref$radius === void 0 ? 2 : _ref$radius, fill = _ref.fill, stroke = _ref.stroke, strokeWidth = _ref.strokeWidth, strokeDasharray = _ref.strokeDasharray, background = _ref.background, _ref$complement = _ref.complement, complement = _ref$complement === void 0 ? false : _ref$complement, className = _ref.className;
  var corners;
  if (complement) {
    corners = [[0, 0], [0, height], [width, 0], [width, height]];
  }
  return import_react3.default.createElement(Pattern, {
    id,
    width,
    height
  }, !!background && import_react3.default.createElement("rect", {
    width,
    height,
    fill: background
  }), import_react3.default.createElement("circle", {
    className: (0, import_classnames2.default)("visx-pattern-circle", className),
    cx: width / 2,
    cy: height / 2,
    r: radius,
    fill,
    stroke,
    strokeWidth,
    strokeDasharray
  }), (_corners = corners) == null ? void 0 : _corners.map(function(_ref2) {
    var cornerX = _ref2[0], cornerY = _ref2[1];
    return import_react3.default.createElement("circle", {
      key: id + "-complement-" + cornerX + "-" + cornerY,
      className: (0, import_classnames2.default)("visx-pattern-circle visx-pattern-circle-complement", className),
      cx: cornerX,
      cy: cornerY,
      r: radius,
      fill,
      stroke,
      strokeWidth,
      strokeDasharray
    });
  }));
}
Circles.propTypes = {
  id: import_prop_types3.default.string.isRequired,
  width: import_prop_types3.default.number.isRequired,
  height: import_prop_types3.default.number.isRequired,
  radius: import_prop_types3.default.number,
  fill: import_prop_types3.default.string,
  className: import_prop_types3.default.string,
  stroke: import_prop_types3.default.string,
  strokeWidth: import_prop_types3.default.oneOfType([import_prop_types3.default.number, import_prop_types3.default.string]),
  strokeDasharray: import_prop_types3.default.oneOfType([import_prop_types3.default.number, import_prop_types3.default.string]),
  complement: import_prop_types3.default.bool,
  background: import_prop_types3.default.string
};

// node_modules/@visx/pattern/esm/patterns/Waves.js
var import_prop_types5 = __toESM(require_prop_types());
var import_react5 = __toESM(require_react());
var import_classnames4 = __toESM(require_classnames());

// node_modules/@visx/pattern/esm/patterns/Path.js
var import_prop_types4 = __toESM(require_prop_types());
var import_react4 = __toESM(require_react());
var import_classnames3 = __toESM(require_classnames());
function Path(_ref) {
  var id = _ref.id, width = _ref.width, height = _ref.height, path = _ref.path, _ref$fill = _ref.fill, fill = _ref$fill === void 0 ? "transparent" : _ref$fill, stroke = _ref.stroke, strokeWidth = _ref.strokeWidth, strokeDasharray = _ref.strokeDasharray, _ref$strokeLinecap = _ref.strokeLinecap, strokeLinecap = _ref$strokeLinecap === void 0 ? "square" : _ref$strokeLinecap, _ref$shapeRendering = _ref.shapeRendering, shapeRendering = _ref$shapeRendering === void 0 ? "auto" : _ref$shapeRendering, background = _ref.background, className = _ref.className;
  return import_react4.default.createElement(Pattern, {
    id,
    width,
    height
  }, !!background && import_react4.default.createElement("rect", {
    width,
    height,
    fill: background
  }), import_react4.default.createElement("path", {
    className: (0, import_classnames3.default)("visx-pattern-path", className),
    d: path,
    fill,
    stroke,
    strokeWidth,
    strokeDasharray,
    strokeLinecap,
    shapeRendering
  }));
}
Path.propTypes = {
  id: import_prop_types4.default.string.isRequired,
  width: import_prop_types4.default.number.isRequired,
  height: import_prop_types4.default.number.isRequired,
  path: import_prop_types4.default.string,
  fill: import_prop_types4.default.string,
  className: import_prop_types4.default.string,
  background: import_prop_types4.default.string,
  stroke: import_prop_types4.default.string,
  strokeWidth: import_prop_types4.default.oneOfType([import_prop_types4.default.number, import_prop_types4.default.string]),
  strokeDasharray: import_prop_types4.default.oneOfType([import_prop_types4.default.string, import_prop_types4.default.number]),
  strokeLinecap: import_prop_types4.default.oneOf(["square", "butt", "round", "inherit"]),
  shapeRendering: import_prop_types4.default.oneOfType([import_prop_types4.default.string, import_prop_types4.default.number])
};

// node_modules/@visx/pattern/esm/patterns/Waves.js
function Waves(_ref) {
  var id = _ref.id, width = _ref.width, height = _ref.height, fill = _ref.fill, stroke = _ref.stroke, strokeWidth = _ref.strokeWidth, strokeDasharray = _ref.strokeDasharray, strokeLinecap = _ref.strokeLinecap, shapeRendering = _ref.shapeRendering, background = _ref.background, className = _ref.className;
  return import_react5.default.createElement(Path, {
    className: (0, import_classnames4.default)("visx-pattern-wave", className),
    path: "M 0 " + height / 2 + " c " + height / 8 + " " + -height / 4 + " , " + height * 3 / 8 + " " + -height / 4 + " , " + height / 2 + " 0\n             c " + height / 8 + " " + height / 4 + " , " + height * 3 / 8 + " " + height / 4 + " , " + height / 2 + " 0 M " + -height / 2 + " " + height / 2 + "\n             c " + height / 8 + " " + height / 4 + " , " + height * 3 / 8 + " " + height / 4 + " , " + height / 2 + " 0 M " + height + " " + height / 2 + "\n             c " + height / 8 + " " + -height / 4 + " , " + height * 3 / 8 + " " + -height / 4 + " , " + height / 2 + " 0",
    id,
    width,
    height,
    fill,
    stroke,
    strokeWidth,
    strokeDasharray,
    strokeLinecap,
    shapeRendering,
    background
  });
}
Waves.propTypes = {
  id: import_prop_types5.default.string.isRequired,
  width: import_prop_types5.default.number.isRequired,
  height: import_prop_types5.default.number.isRequired,
  fill: import_prop_types5.default.string,
  className: import_prop_types5.default.string,
  background: import_prop_types5.default.string,
  stroke: import_prop_types5.default.string,
  strokeWidth: import_prop_types5.default.oneOfType([import_prop_types5.default.number, import_prop_types5.default.string]),
  strokeDasharray: import_prop_types5.default.oneOfType([import_prop_types5.default.string, import_prop_types5.default.number]),
  strokeLinecap: import_prop_types5.default.oneOf(["square", "butt", "round", "inherit"]),
  shapeRendering: import_prop_types5.default.oneOfType([import_prop_types5.default.string, import_prop_types5.default.number])
};

// node_modules/@visx/pattern/esm/patterns/Hexagons.js
var import_prop_types6 = __toESM(require_prop_types());
var import_react6 = __toESM(require_react());
var import_classnames5 = __toESM(require_classnames());
function Hexagons(_ref) {
  var id = _ref.id, height = _ref.height, fill = _ref.fill, stroke = _ref.stroke, strokeWidth = _ref.strokeWidth, strokeDasharray = _ref.strokeDasharray, strokeLinecap = _ref.strokeLinecap, shapeRendering = _ref.shapeRendering, background = _ref.background, className = _ref.className, _ref$size = _ref.size, size = _ref$size === void 0 ? 3 : _ref$size;
  var sqrtSize = Math.sqrt(size);
  return import_react6.default.createElement(Path, {
    className: (0, import_classnames5.default)("visx-pattern-hexagon", className),
    path: "M " + height + ",0 l " + height + ",0 l " + height / 2 + "," + height * sqrtSize / 2 + " l " + -height / 2 + "," + height * sqrtSize / 2 + " l " + -height + ",0 l " + -height / 2 + "," + -height * sqrtSize / 2 + " Z M 0," + height * sqrtSize / 2 + " l " + height / 2 + ",0 M " + 3 * height + "," + height * sqrtSize / 2 + " l " + -height / 2 + ",0",
    id,
    width: size,
    height: sqrtSize,
    fill,
    stroke,
    strokeWidth,
    strokeDasharray,
    strokeLinecap,
    shapeRendering,
    background
  });
}
Hexagons.propTypes = {
  id: import_prop_types6.default.string.isRequired,
  height: import_prop_types6.default.number.isRequired,
  size: import_prop_types6.default.number,
  fill: import_prop_types6.default.string,
  className: import_prop_types6.default.string,
  background: import_prop_types6.default.string,
  stroke: import_prop_types6.default.string,
  strokeWidth: import_prop_types6.default.oneOfType([import_prop_types6.default.number, import_prop_types6.default.string]),
  strokeDasharray: import_prop_types6.default.oneOfType([import_prop_types6.default.string, import_prop_types6.default.number]),
  strokeLinecap: import_prop_types6.default.oneOf(["square", "butt", "round", "inherit"]),
  shapeRendering: import_prop_types6.default.oneOfType([import_prop_types6.default.string, import_prop_types6.default.number])
};
export {
  Pattern,
  Circles as PatternCircles,
  Hexagons as PatternHexagons,
  Lines as PatternLines,
  PatternOrientation,
  Path as PatternPath,
  Waves as PatternWaves
};
//# sourceMappingURL=@visx_pattern.js.map
